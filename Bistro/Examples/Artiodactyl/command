## with new mcmcNNI
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o test -r 1000 -b 1000 --no-mcmc --mcmc-file test.mcmc.out > test.log


## by default now we do the chains:
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-threads -r 1000 -b 1000 > bistro-threads.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-nochain -r 1000 -b 1000 --no-mcmc-threads > bistro-nochain.log

## original code:
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-orig -r 1000 -b 1000 > bistro-orig.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-orig2 -r 1000 -b 1000 > bistro-orig2.log

## with threads and 1 chain:
## warning: we changed the --do-mcmc-chains option to --no-mcmc-threads to do the opposite
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-chain1 -r 1000 -b 1000 --do-mcmc-chains > bistro-chain1.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-chain1-2 -r 1000 -b 1000 --do-mcmc-chains > bistro-chain1-2.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-chains4 -r 1000 -b 1000 --do-mcmc-chains > bistro-chains4.log

## now with gelman
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-chains4-gelman -r 1000 -b 1000 --do-mcmc-chains > bistro-chains4-gelman.log


../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-mcmc -r 1000 -b 1000 > bistro-mcmc.log

source("../../Scripts/summary.R")
compareBistro("bistro-mcmc",besttree="(1,2,(3,(4,(5,6))));",bmcmc="mcmc2")


## allocation error
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o test -r 1000 -b 1000 -s 44468458 > test.log


## distances
../../Code/badger/mb2badger artiodactyl-6.nex.run1.t
../../Code/bistro/distances -f ../../Data/artiodactyl-6.fasta --mbfile artiodactyl-6.nex.run1.tre --bistrofile bistro-new---0-249.treeBL

## test new output files
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o test -r 1000 -b 1000 > test.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o test -r 1000 -b 1000 --no-mcmc --mcmc-file test.mcmc.out > test.log

## test new generateBL
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro-new -r 1000 -b 1000 > bistro-new.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o test -r 5 -b 100 --threads 1 -s 179262012 > test.log

## test positive definite matrix
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o test -r 100 -b 100 --threads 1 > test.log

## test of distance matrix
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro10 -r 10 -b 10 -s 1495847783 > bistro10.log

source("../../Scripts/summary.R")
compareBistro("bistro9-fixT",besttree="(1,2,(3,(4,(5,6))));",bmcmc="mcmc2")
compareBistro("bistro9",besttree="(1,2,(3,(4,(5,6))));",bmcmc="mcmc2")
compareBistro("bistro9-p",besttree="(1,2,(3,(4,(5,6))));",bmcmc="mcmc2")

../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro9 -r 1000 -b 1000 -s 3340639079 > bistro9.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro9-p -r 1000 -b 1000 --no-reweight -s 3340639079 > bistro9-p.log

## compare artiodactyl and bmcmc on same tree
../../Code/bistro/bmcmc -f ../../Data/artiodactyl-6.fasta -o mcmc2 -r 10000 -b 1000 -t "(Camel,Dolphin,(Pig,(Cow,(Sheep,Giraffe))));" > mcmc2.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro9-fixT -r 1000 -b 1000 -t "(Camel,Dolphin,(Pig,(Cow,(Sheep,Giraffe))));" > bistro9-fixT.log

../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp -r 1000 -b 10 -s 3110090550 --threads 1 > tmp.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp -r 1000 -b 10 --no-MCMC -s 3110090550 --threads 1 > tmp.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp -r 1000 -b 10 -p 0.284858,0.272258,0.144999,0.297885 -q 0.234899,0.156195,0.086587,0.021415,0.492271,0.00863229 --no-MCMC -s 3110090550 --threads 1 > tmp.log


## something does not work here
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o dist2 -r 1000 -b 1000 -p 0.284858,0.272258,0.144999,0.297885 -q 0.234899,0.156195,0.086587,0.021415,0.492271,0.00863229 --no-MCMC --fixedQ > dist2.log

## check if distance weights are computed correctly
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp2 -r 1000 -b 10 --onlyBootstrap -s 3110090550 > tmp2.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o dist -r 1000 -b 1000 --onlyBootstrap -s 875220241 > dist.log

## test mean distances:
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp -r 1000 -b 10 --onlyBootstrap -s 3110090550 > tmp.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp -r 1000 -b 10 --onlyBootstrap > tmp.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o tmp -r 1000 -b 10 --onlyBootstrap -p 0.284858,0.272258,0.144999,0.297885 -q 0.234899,0.156195,0.086587,0.021415,0.492271,0.00863229 --no-MCMC -s 2527267968 > tmp.log

## test after adding summarize to bistro
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro8 -r 1000 -b 1000 --independent > bistro8.log
../../Code/bistro/bccd -f ../../Data/artiodactyl-6.fasta -o ccd2 -r 1000 -b 1000 > ccd2.log
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o ccd3 -r 1000 -b 1000 --independent --onlyBootstrap > ccd3.log

## summarize
../../Code/bistro/Summarize/summarize bistro7.bootstrapBL

## computing frechet mean tree
java -jar ../../../src/centroid-code/SturmMean/SturmMean.jar bistro7.bootstrapBL > Frechet-mean.tre

## test writing bootstrap trees to file
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro7 -r 1000 -b 1000 --independent > bistro7.log
../../Code/bistro/bccd -f ../../Data/artiodactyl-6.fasta -o ccd -r 1000 -b 1000 > ccd.log

## running mcmc with q and bl
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro6 -r 1000 -b 1000 --independent > bistro6.log
summaryBistro("bistro6", besttree="(1,2,(3,(4,(5,6))));")

## running mcmc with q and bl
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro5 -r 1000 -b 1000 > bistro5.log

## first mb tree
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o testtree -r 1000 -b 1000 -t "(Camel,Dolphin,(Pig,(Cow,(Sheep,Giraffe))));" > testtree.log
../../Code/bistro/bmcmc -f ../../Data/artiodactyl-6.fasta -o mcmc1 -r 10000 -b 1000 -t "(Camel,Dolphin,(Pig,(Cow,(Sheep,Giraffe))));" > mcmc1.log

## 2nd mb tree
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o testtree2 -r 1000 -b 1000 -t "(Camel,Dolphin,(Pig,(Sheep,(Cow,Giraffe))));" > testtree2.log
../../Code/bistro/bmcmc -f ../../Data/artiodactyl-6.fasta -o mcmc2 -r 10000 -b 1000 -t "(Camel,Dolphin,(Pig,(Sheep,(Cow,Giraffe))));" > mcmc2.log
summaryBistro("testtree2", besttree="(1,2,(3,(4,(5,6))));", bmcmc="mcmc2")

## 1st bistro tree (3rd mb tree)
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o testtree3 -r 1000 -b 1000 -t "(Camel,(Dolphin,Pig),(Cow,(Sheep,Giraffe)));" > testtree3.log
../../Code/bistro/bmcmc -f ../../Data/artiodactyl-6.fasta -o mcmc3 -r 10000 -b 1000 -t "(Camel,(Dolphin,Pig),(Cow,(Sheep,Giraffe)));" > mcmc3.log
summaryBistro("testtree3", besttree="(1,(2,3),(4,(5,6)));", bmcmc="mcmc3")


## tests with mcmc for 10 first bootstrap trees
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro4 -r 1000 -b 1000 > bistro4.log

## run bistro for fixed tree
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o testtree -r 1000 -b 1000 -t "(Camel,Dolphin,(Pig,(Cow,(Sheep,Giraffe))));" > testtree.log

## run bmcmc
../../Code/bistro/bmcmc -f ../../Data/artiodactyl-6.fasta -o mcmc1 -r 10000 -b 1000 -t "(Camel,Dolphin,(Pig,(Cow,(Sheep,Giraffe))));" > mcmc1.log
## run bistro
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -o bistro1 -r 1000 -b 1000 > bistro1.log


## to compare with ccdprobs:
../../Code/ccdprobs-1.0.5/src/ccdprobs -i hoo -o hoo2

../../Code/bistro/bistro -p 0.309,0.288,0.134,0.269 -q 0.1847391,0.1289626,0.0373299,0.0079465,0.6403711,0.0006508 -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1

#### warning: 3/29/2017, changed -m to -M
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 4 -o run9.txt > run9.log

## debug generateBranchLengths:
## only joint MLE
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 100 -m 4 -o run12.txt > run12.log
## after random bl
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 100 -m 4 -o run13.txt > run13.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 100 -m 4 -o run14.txt > run14.log
## after 2d joint (instead of 3d):
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 100 -m 4 -o run15.txt > run15.log

## compare to mrbayes:
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 5000 -m 2 -o run16.txt > run16.log

## to test after adding resolveRoot
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 100 -m 2 -o run17.txt > run17.log

## to debug ccdprobs
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10 -m 2 -o ccd.txt > ccd.log
## after changed add
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 100 -m 2 -o ccd3.txt > ccd3.log


## compare to mrbayes:
* no parsimony
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 5000 -m 2 -o run5k.txt > run5k.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o run1k.txt > run1k.log
* parsimony
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 5000 -m 2 -o run5k-p.txt > run5k-p.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o run1k-p.txt > run1k-p.log

## with new output files and split weights summary
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o pars1k -s 4011643352 > pars1k.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o nopars1k --no-parsimony -s 4011643352 > nopars1k.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o pars1k-indep -s 4011643352 --independent > pars1k-indep.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o nopars1k-indep -s 4011643352 --independent --no-parsimony > nopars1k-indep.log

## after fixed error in weights
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o pars10k > pars10k.log

## test new threads:
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o threads2 -s 2566231036 > threads2.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o threads3 -s 2566231036 > threads3.log

## to check printed order in cout with independent to only call randomEdges
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10 -m 2 -o core1 --threads 1 --independent > core1.log
## to check with generate branch lengths if nodes are computed in correct order
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10 -m 2 -o core1gbl --threads 1  > core1gbl.log



time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10 -m 2 -o core1_2 --threads 1 --independent -s 2561016956 > core1_2.log



## comparison between inefficient likelihood (bistro0) and efficient likelihood, and with threads2 run a while ago
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o bistro_eff -s 2566231036 > bistro_eff.log
time ../../Code/bistro0/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o bistro_ineff -s 2566231036 > bistro_ineff.log

## after adding postorder to bistro0: but this does not work because we need to rewrite generateBL
time ../../Code/bistro0/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o bistro_ineff_ord -s 2566231036 > bistro_ineff_ord.log

## to study likelihood
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o lik -s 2566231036 > lik.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6-tiny.fasta -b 10000 -r 10 -m 2 -o lik-tiny -s 2566231036 --threads 1 > lik-tiny.log

## after fixing error in new efficient approach:
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o bistro_eff -s 2566231036 > bistro_eff.log

## to compare with and without 2D/3D MLE
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o joint -s 2566231036 > joint.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o joint2 -s 2566231036 > joint2.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o no-joint -s 2566231036 > no-joint.log

## to test that new parameter jointMLE works
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o joint2 -s 2566231036 --jointMLE > joint2.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o no-joint2 -s 2566231036 > no-joint2.log


## to test with many cores, segmentation fault without valgrind?
../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 100 -r 1000 -m 2 -o test-birge -s 2561016956 > test-birge.log


## after sampling Q (compare to mrbayes: mb artiodactyl-6.nex)
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o randQ -s 2091436107 > randQ.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 1000 -m 2 -o fixedQ -s 2091436107 --fixedQ > fixedQ.log ##does not work

## compare different parsimony scales (new sorted output)
## run in darwin machines (threads=10)
## darwin02
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ01 --threads 10 --parsimony-scale 0.1 > randQ01.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ03 --threads 10 --parsimony-scale 0.3 > randQ03.log
## darwin03
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ05 --threads 10 > randQ05.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ07 --threads 10 --parsimony-scale 0.7 > randQ07.log
## darwin04
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ09 --threads 10 --parsimony-scale 0.9 > randQ09.log


### after improving topCounts (darwin00)
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ05 --threads 10  > randQ05.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 10000 -r 10000 -m 2 -o randQ20 --threads 10 --parsimony-scale 2 > randQ20.log


#####################################################
# changed no-parsimony to no-reweight

# to test loglik weights for bootstrap trees
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 100 -r 0 -o likwt > likwt.log

# compare fixedQ, randQ (default), loglikwt, parsimonywt (default), no weight
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 1000 -r 1000 -m 2 -o randQpars > randQpars.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 1000 -r 1000 -m 2 -o fixedQpars --fixedQ > fixedQpars.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 1000 -r 1000 -m 2 -o randQlik --loglikweight > randQlik.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 1000 -r 1000 -m 2 -o randQno-wt --no-reweight > randQno-wt.log
time ../../Code/bistro/bistro -f ../../Data/artiodactyl-6.fasta -b 1000 -r 1000 -m 2 -o fixedQlik --fixedQ --loglikweight > fixedQlik.log